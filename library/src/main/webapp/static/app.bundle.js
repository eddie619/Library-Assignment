!function(Q){function I(I){for(var C,g,t=I[0],A=I[1],e=I[2],n=0,c=[];n<t.length;n++)g=t[n],Object.prototype.hasOwnProperty.call(s,g)&&s[g]&&c.push(s[g][0]),s[g]=0;for(C in A)Object.prototype.hasOwnProperty.call(A,C)&&(Q[C]=A[C]);for(B&&B(I);c.length;)c.shift()();return l.push.apply(l,e||[]),F()}function F(){for(var I,C=0;C<l.length;C++){for(var g=l[C],t=!0,A=1;A<g.length;A++){var e=g[A];0!==s[e]&&(t=!1)}t&&(l.splice(C--,1),I=n(n.s=g[0]))}return I}var g={},s={1:0},l=[];function n(I){if(g[I])return g[I].exports;var C=g[I]={i:I,l:!1,exports:{}};return Q[I].call(C.exports,C,C.exports,n),C.l=!0,C.exports}n.m=Q,n.c=g,n.d=function(I,C,g){n.o(I,C)||Object.defineProperty(I,C,{enumerable:!0,get:g})},n.r=function(I){"undefined"!=typeof Symbol&&Symbol.toStringTag&&Object.defineProperty(I,Symbol.toStringTag,{value:"Module"}),Object.defineProperty(I,"__esModule",{value:!0})},n.t=function(C,I){if(1&I&&(C=n(C)),8&I)return C;if(4&I&&"object"==typeof C&&C&&C.__esModule)return C;var g=Object.create(null);if(n.r(g),Object.defineProperty(g,"default",{enumerable:!0,value:C}),2&I&&"string"!=typeof C)for(var t in C)n.d(g,t,function(I){return C[I]}.bind(null,t));return g},n.n=function(I){var C=I&&I.__esModule?function(){return I.default}:function(){return I};return n.d(C,"a",C),C},n.o=function(I,C){return Object.prototype.hasOwnProperty.call(I,C)},n.p="../resources/";var C=window.webpackJsonp=window.webpackJsonp||[],t=C.push.bind(C);C.push=I,C=C.slice();for(var A=0;A<C.length;A++)I(C[A]);var B=t;l.push([398,0]),F()}({397:function(module,exports,__webpack_require__){eval("// extracted by mini-css-extract-plugin//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbIndlYnBhY2s6Ly8vLi9zcmMvY3NzL2N1c3RvbS5jc3M/ZDQwMSJdLCJuYW1lcyI6W10sIm1hcHBpbmdzIjoiQUFBQSIsImZpbGUiOiIzOTcuanMiLCJzb3VyY2VzQ29udGVudCI6WyIvLyBleHRyYWN0ZWQgYnkgbWluaS1jc3MtZXh0cmFjdC1wbHVnaW4iXSwic291cmNlUm9vdCI6IiJ9\n//# sourceURL=webpack-internal:///397\n")},398:function(module,__webpack_exports__,__webpack_require__){"use strict";eval('__webpack_require__.r(__webpack_exports__);\n\n// EXTERNAL MODULE: ./node_modules/core-js/stable/index.js\nvar stable = __webpack_require__(168);\n\n// EXTERNAL MODULE: ./node_modules/regenerator-runtime/runtime.js\nvar runtime = __webpack_require__(390);\n\n// EXTERNAL MODULE: ./node_modules/es6-promise/dist/es6-promise.js\nvar es6_promise = __webpack_require__(117);\n\n// EXTERNAL MODULE: ./node_modules/isomorphic-fetch/fetch-npm-browserify.js\nvar fetch_npm_browserify = __webpack_require__(391);\n\n// EXTERNAL MODULE: ./node_modules/react/index.js\nvar react = __webpack_require__(0);\nvar react_default = /*#__PURE__*/__webpack_require__.n(react);\n\n// EXTERNAL MODULE: ./node_modules/react-dom/index.js\nvar react_dom = __webpack_require__(114);\nvar react_dom_default = /*#__PURE__*/__webpack_require__.n(react_dom);\n\n// EXTERNAL MODULE: ./node_modules/react-router-dom/esm/react-router-dom.js\nvar react_router_dom = __webpack_require__(49);\n\n// CONCATENATED MODULE: ./src/components/Layout/Layout.js\n\n\nvar Layout_Layout = function Layout(props) {\n  return react_default.a.createElement(react["Fragment"], null, react_default.a.createElement("div", {\n    className: "container"\n  }, react_default.a.createElement("x-main", null, props.children)));\n};\n\n/* harmony default export */ var components_Layout_Layout = (Layout_Layout);\n// EXTERNAL MODULE: ./node_modules/react-router/esm/react-router.js + 1 modules\nvar react_router = __webpack_require__(44);\n\n// CONCATENATED MODULE: ./src/components/Service/RESTService.js\nfunction _classCallCheck(instance, Constructor) { if (!(instance instanceof Constructor)) { throw new TypeError("Cannot call a class as a function"); } }\n\nfunction _defineProperties(target, props) { for (var i = 0; i < props.length; i++) { var descriptor = props[i]; descriptor.enumerable = descriptor.enumerable || false; descriptor.configurable = true; if ("value" in descriptor) descriptor.writable = true; Object.defineProperty(target, descriptor.key, descriptor); } }\n\nfunction _createClass(Constructor, protoProps, staticProps) { if (protoProps) _defineProperties(Constructor.prototype, protoProps); if (staticProps) _defineProperties(Constructor, staticProps); return Constructor; }\n\nvar FETCH_LIBRARY_API = \'/library/rest/api/v1/details/getAll\';\nvar ADD_LIBRARY_API = \'/library/rest/api/v1/details/add\';\nvar FETCH_BOOKS_API = \'/library/rest/api/v1/details/book/get/\';\nvar ADD_BOOKS_API = \'/library/rest/api/v1/details/book/add\';\nvar RESTService =\n/*#__PURE__*/\nfunction () {\n  function RESTService() {\n    _classCallCheck(this, RESTService);\n  }\n\n  _createClass(RESTService, [{\n    key: "getAllLibraries",\n    value: function getAllLibraries() {\n      return fetch(FETCH_LIBRARY_API, {\n        method: \'GET\',\n        headers: {\n          \'Accept\': \'application/json\'\n        }\n      }).then(checkStatus).then(function (response) {\n        return response.json();\n      });\n    }\n  }, {\n    key: "addLibrary",\n    value: function addLibrary(object) {\n      return fetch(ADD_LIBRARY_API, {\n        method: \'POST\',\n        headers: {\n          \'Content-Type\': \'application/json\'\n        },\n        body: JSON.stringify(object)\n      }).then(checkStatus);\n    }\n  }, {\n    key: "getBooksByLibrary",\n    value: function getBooksByLibrary(libraryId) {\n      var URL = FETCH_BOOKS_API + libraryId;\n      return fetch(URL, {\n        method: \'GET\',\n        headers: {\n          \'Accept\': \'application/json\'\n        }\n      }).then(checkStatus).then(function (response) {\n        return response.json();\n      });\n    }\n  }, {\n    key: "addBook",\n    value: function addBook(object) {\n      return fetch(ADD_BOOKS_API, {\n        method: \'POST\',\n        headers: {\n          \'Content-Type\': \'application/json\'\n        },\n        body: JSON.stringify(object)\n      }).then(checkStatus);\n    }\n  }]);\n\n  return RESTService;\n}();\n\nvar checkStatus = function checkStatus(response) {\n  if (response.status >= 200 && response.status < 300) {\n    return response;\n  }\n\n  return response.json().then(function (json) {\n    return Promise.reject({\n      body: json\n    });\n  });\n};\n\nvar restService = new RESTService();\n\n// CONCATENATED MODULE: ./src/components/Modal/Modal.js\n\n\nvar Modal_Modal = function Modal(props) {\n  var showHideClassName = props.show ? \'display-block\' : \'modal display-none\';\n  return react_default.a.createElement("div", {\n    className: showHideClassName\n  }, react_default.a.createElement("div", {\n    className: "modal-backdrop"\n  }, react_default.a.createElement("div", {\n    id: "myModal",\n    role: "dialog"\n  }, react_default.a.createElement("div", {\n    className: "modal-dialog margin-top"\n  }, react_default.a.createElement("div", {\n    className: "modal-content"\n  }, react_default.a.createElement("div", {\n    className: "modal-header modal-header padding-bottom-8"\n  }, react_default.a.createElement("h3", {\n    className: "modal-title inline-block"\n  }, props.title), react_default.a.createElement("button", {\n    type: "button",\n    className: "close",\n    "data-dismiss": "modal",\n    id: "close",\n    onClick: props.handleClose\n  }, "X")), react_default.a.createElement("div", {\n    className: "modal-body overflow-auto"\n  }, props.children), react_default.a.createElement("div", {\n    className: "modal-footer pr-30"\n  }, react_default.a.createElement("button", {\n    type: "button",\n    className: "btn btn-primary",\n    id: "ok",\n    onClick: props.handleOk,\n    onMouseOut: function onMouseOut(e) {\n      return e.target.blur();\n    }\n  }, props.labelOk ? props.labelOk : "Ok"), react_default.a.createElement("button", {\n    type: "button",\n    className: "btn btn-default",\n    id: "cancel",\n    onClick: props.handleClose,\n    onMouseOut: function onMouseOut(e) {\n      return e.target.blur();\n    }\n  }, props.labelClose ? props.labelClose : "Cancel")))))));\n};\n\n/* harmony default export */ var components_Modal_Modal = (Modal_Modal);\n// CONCATENATED MODULE: ./src/components/Liibrary/Library.js\nfunction _typeof(obj) { if (typeof Symbol === "function" && typeof Symbol.iterator === "symbol") { _typeof = function _typeof(obj) { return typeof obj; }; } else { _typeof = function _typeof(obj) { return obj && typeof Symbol === "function" && obj.constructor === Symbol && obj !== Symbol.prototype ? "symbol" : typeof obj; }; } return _typeof(obj); }\n\nfunction Library_classCallCheck(instance, Constructor) { if (!(instance instanceof Constructor)) { throw new TypeError("Cannot call a class as a function"); } }\n\nfunction Library_defineProperties(target, props) { for (var i = 0; i < props.length; i++) { var descriptor = props[i]; descriptor.enumerable = descriptor.enumerable || false; descriptor.configurable = true; if ("value" in descriptor) descriptor.writable = true; Object.defineProperty(target, descriptor.key, descriptor); } }\n\nfunction Library_createClass(Constructor, protoProps, staticProps) { if (protoProps) Library_defineProperties(Constructor.prototype, protoProps); if (staticProps) Library_defineProperties(Constructor, staticProps); return Constructor; }\n\nfunction _possibleConstructorReturn(self, call) { if (call && (_typeof(call) === "object" || typeof call === "function")) { return call; } return _assertThisInitialized(self); }\n\nfunction _getPrototypeOf(o) { _getPrototypeOf = Object.setPrototypeOf ? Object.getPrototypeOf : function _getPrototypeOf(o) { return o.__proto__ || Object.getPrototypeOf(o); }; return _getPrototypeOf(o); }\n\nfunction _assertThisInitialized(self) { if (self === void 0) { throw new ReferenceError("this hasn\'t been initialised - super() hasn\'t been called"); } return self; }\n\nfunction _inherits(subClass, superClass) { if (typeof superClass !== "function" && superClass !== null) { throw new TypeError("Super expression must either be null or a function"); } subClass.prototype = Object.create(superClass && superClass.prototype, { constructor: { value: subClass, writable: true, configurable: true } }); if (superClass) _setPrototypeOf(subClass, superClass); }\n\nfunction _setPrototypeOf(o, p) { _setPrototypeOf = Object.setPrototypeOf || function _setPrototypeOf(o, p) { o.__proto__ = p; return o; }; return _setPrototypeOf(o, p); }\n\nfunction _defineProperty(obj, key, value) { if (key in obj) { Object.defineProperty(obj, key, { value: value, enumerable: true, configurable: true, writable: true }); } else { obj[key] = value; } return obj; }\n\n\n\n\n\n\nvar Library_Library =\n/*#__PURE__*/\nfunction (_Component) {\n  _inherits(Library, _Component);\n\n  function Library(props) {\n    var _this;\n\n    Library_classCallCheck(this, Library);\n\n    _this = _possibleConstructorReturn(this, _getPrototypeOf(Library).call(this, props));\n\n    _defineProperty(_assertThisInitialized(_this), "state", {\n      librarys: [],\n      library: {\n        libraryName: ""\n      },\n      modal: {\n        show: false\n      }\n    });\n\n    _defineProperty(_assertThisInitialized(_this), "getAllLibraries", function () {\n      restService.getAllLibraries().then(function (data) {\n        _this.setState({\n          librarys: data\n        });\n      }).catch(function (error) {\n        console.log(error);\n      });\n    });\n\n    _defineProperty(_assertThisInitialized(_this), "onChangeHandler", function (e) {\n      var library = Object.assign({});\n      library[e.target.id] = e.target.value;\n\n      _this.setState({\n        library: library\n      });\n    });\n\n    _defineProperty(_assertThisInitialized(_this), "openModalHandler", function () {\n      _this.setState({\n        library: {\n          libraryName: ""\n        },\n        modal: {\n          show: true\n        }\n      });\n    });\n\n    _defineProperty(_assertThisInitialized(_this), "closeModalHandler", function () {\n      _this.setState({\n        modal: {\n          show: false\n        }\n      });\n    });\n\n    _defineProperty(_assertThisInitialized(_this), "onOkButtonClickHandler", function () {\n      restService.addLibrary(_this.state.library).then(function (data) {\n        if (data.status < 400) {\n          _this.getAllLibraries();\n\n          _this.setState({\n            modal: {\n              show: false\n            },\n            library: {\n              libraryName: ""\n            }\n          });\n        }\n      }).catch(function (error) {\n        console.log(error);\n      });\n    });\n\n    return _this;\n  }\n\n  Library_createClass(Library, [{\n    key: "componentDidMount",\n    value: function componentDidMount() {\n      this.getAllLibraries();\n    }\n  }, {\n    key: "render",\n    value: function render() {\n      return react_default.a.createElement(react_default.a.Fragment, null, react_default.a.createElement("h3", null, "Library Application"), react_default.a.createElement("div", {\n        className: "panel panel-default"\n      }, react_default.a.createElement("div", {\n        className: "panel-heading"\n      }, "Create Library"), react_default.a.createElement("div", {\n        className: "panel-body"\n      }, react_default.a.createElement("button", {\n        type: "button",\n        className: "btn btn-primary",\n        onClick: this.openModalHandler\n      }, "New"))), this.state.librarys.length > 0 && react_default.a.createElement("div", {\n        className: "panel panel-default table-fixed"\n      }, react_default.a.createElement("table", {\n        className: "table"\n      }, react_default.a.createElement("thead", null, react_default.a.createElement("tr", null, react_default.a.createElement("th", {\n        className: "col-width-130"\n      }, "S. No"), react_default.a.createElement("th", null, "Library Name"))), react_default.a.createElement("tbody", null, this.state.librarys.map(function (library, index) {\n        return react_default.a.createElement("tr", {\n          key: "tableRow" + index\n        }, react_default.a.createElement("td", null, index + 1), react_default.a.createElement("td", null, react_default.a.createElement(react_router_dom["b" /* Link */], {\n          className: "inline-link",\n          to: {\n            pathname: \'/addBooks\',\n            state: {\n              libraryId: library.libraryId\n            }\n          }\n        }, library.libraryName)));\n      })))), react_default.a.createElement(components_Modal_Modal, {\n        title: "Add New Library",\n        show: this.state.modal.show,\n        handleClose: this.closeModalHandler,\n        handleOk: this.onOkButtonClickHandler,\n        labelOk: "Add",\n        labelClose: "Exit"\n      }, react_default.a.createElement("div", {\n        className: "row"\n      }, react_default.a.createElement("div", {\n        className: "col-lg-4"\n      }, "Library Name:"), react_default.a.createElement("div", {\n        className: "col-lg-8"\n      }, react_default.a.createElement("input", {\n        type: "text",\n        onChange: this.onChangeHandler,\n        value: this.state.library.libraryName,\n        id: "libraryName"\n      })))));\n    }\n  }]);\n\n  return Library;\n}(react["Component"]);\n\n/* harmony default export */ var Liibrary_Library = (Object(react_router["f" /* withRouter */])(Library_Library));\n// CONCATENATED MODULE: ./src/components/Book/Book.js\nfunction Book_typeof(obj) { if (typeof Symbol === "function" && typeof Symbol.iterator === "symbol") { Book_typeof = function _typeof(obj) { return typeof obj; }; } else { Book_typeof = function _typeof(obj) { return obj && typeof Symbol === "function" && obj.constructor === Symbol && obj !== Symbol.prototype ? "symbol" : typeof obj; }; } return Book_typeof(obj); }\n\nfunction Book_classCallCheck(instance, Constructor) { if (!(instance instanceof Constructor)) { throw new TypeError("Cannot call a class as a function"); } }\n\nfunction Book_defineProperties(target, props) { for (var i = 0; i < props.length; i++) { var descriptor = props[i]; descriptor.enumerable = descriptor.enumerable || false; descriptor.configurable = true; if ("value" in descriptor) descriptor.writable = true; Object.defineProperty(target, descriptor.key, descriptor); } }\n\nfunction Book_createClass(Constructor, protoProps, staticProps) { if (protoProps) Book_defineProperties(Constructor.prototype, protoProps); if (staticProps) Book_defineProperties(Constructor, staticProps); return Constructor; }\n\nfunction Book_possibleConstructorReturn(self, call) { if (call && (Book_typeof(call) === "object" || typeof call === "function")) { return call; } return Book_assertThisInitialized(self); }\n\nfunction Book_getPrototypeOf(o) { Book_getPrototypeOf = Object.setPrototypeOf ? Object.getPrototypeOf : function _getPrototypeOf(o) { return o.__proto__ || Object.getPrototypeOf(o); }; return Book_getPrototypeOf(o); }\n\nfunction Book_assertThisInitialized(self) { if (self === void 0) { throw new ReferenceError("this hasn\'t been initialised - super() hasn\'t been called"); } return self; }\n\nfunction Book_inherits(subClass, superClass) { if (typeof superClass !== "function" && superClass !== null) { throw new TypeError("Super expression must either be null or a function"); } subClass.prototype = Object.create(superClass && superClass.prototype, { constructor: { value: subClass, writable: true, configurable: true } }); if (superClass) Book_setPrototypeOf(subClass, superClass); }\n\nfunction Book_setPrototypeOf(o, p) { Book_setPrototypeOf = Object.setPrototypeOf || function _setPrototypeOf(o, p) { o.__proto__ = p; return o; }; return Book_setPrototypeOf(o, p); }\n\nfunction Book_defineProperty(obj, key, value) { if (key in obj) { Object.defineProperty(obj, key, { value: value, enumerable: true, configurable: true, writable: true }); } else { obj[key] = value; } return obj; }\n\n\n\n\n\n\nvar Book_Book =\n/*#__PURE__*/\nfunction (_Component) {\n  Book_inherits(Book, _Component);\n\n  function Book(props) {\n    var _this;\n\n    Book_classCallCheck(this, Book);\n\n    _this = Book_possibleConstructorReturn(this, Book_getPrototypeOf(Book).call(this, props));\n\n    Book_defineProperty(Book_assertThisInitialized(_this), "setLibraryId", function () {\n      if (_this.props.location.state) {\n        localStorage.setItem("libraryId", JSON.stringify(_this.props.location.state.libraryId));\n      }\n    });\n\n    Book_defineProperty(Book_assertThisInitialized(_this), "state", {\n      books: [],\n      book: {\n        bookId: "",\n        bookName: "",\n        bookAuthor: "",\n        libraryId: localStorage.getItem("libraryId"),\n        bookIsbn: ""\n      },\n      modal: {\n        action: "",\n        show: false\n      }\n    });\n\n    Book_defineProperty(Book_assertThisInitialized(_this), "getLibraryId", function () {\n      return localStorage.getItem("libraryId");\n    });\n\n    Book_defineProperty(Book_assertThisInitialized(_this), "openModalHandler", function (action) {\n      _this.setState({\n        modal: {\n          action: action,\n          show: true\n        }\n      });\n    });\n\n    Book_defineProperty(Book_assertThisInitialized(_this), "closeModalHandler", function () {\n      _this.setState({\n        modal: {\n          action: "",\n          show: false\n        },\n        book: {\n          bookName: "",\n          bookAuthor: "",\n          bookIsbn: ""\n        }\n      });\n    });\n\n    Book_defineProperty(Book_assertThisInitialized(_this), "changeHandler", function (e) {\n      var book = Object.assign({}, _this.state.book);\n      book[e.target.id] = e.target.value;\n\n      _this.setState({\n        book: book\n      });\n    });\n\n    Book_defineProperty(Book_assertThisInitialized(_this), "onOkButtonClickHandler", function (action) {\n      var book = Object.assign({}, _this.state.book);\n      book["libraryId"] = _this.getLibraryId();\n      book["action"] = action;\n      restService.addBook(book).then(function (response) {\n        if (response.status < 400) {\n          _this.closeModalHandler();\n\n          localStorage.setItem("libraryId", "");\n\n          _this.props.history.push("/");\n        }\n      });\n    });\n\n    Book_defineProperty(Book_assertThisInitialized(_this), "onUpdateClickHandler", function (action, bookId) {\n      var book = _this.state.books.filter(function (book) {\n        return book.bookId === bookId;\n      })[0];\n\n      _this.setState({\n        book: book\n      });\n\n      _this.openModalHandler(action);\n    });\n\n    Book_defineProperty(Book_assertThisInitialized(_this), "getAllBooks", function () {\n      restService.getBooksByLibrary(_this.getLibraryId()).then(function (data) {\n        _this.setState({\n          books: data\n        });\n      }).catch(function (error) {});\n    });\n\n    _this.setLibraryId();\n\n    return _this;\n  }\n\n  Book_createClass(Book, [{\n    key: "componentDidMount",\n    value: function componentDidMount() {\n      this.getAllBooks();\n    }\n  }, {\n    key: "render",\n    value: function render() {\n      var _this2 = this;\n\n      return react_default.a.createElement(react_default.a.Fragment, null, react_default.a.createElement("h3", null, "Library Application"), react_default.a.createElement("div", {\n        className: "panel panel-default"\n      }, react_default.a.createElement("div", {\n        className: "panel-heading"\n      }, "Add Books"), react_default.a.createElement("div", {\n        className: "panel-body"\n      }, react_default.a.createElement("div", {\n        className: "panel panel-default table-fixed"\n      }, react_default.a.createElement("table", {\n        className: "table"\n      }, react_default.a.createElement("thead", null, react_default.a.createElement("tr", null, react_default.a.createElement("th", {\n        className: "col-width-130"\n      }, "S. No"), react_default.a.createElement("th", null, "Book Name"), react_default.a.createElement("th", null, "Author"), react_default.a.createElement("th", null, "ISBN"), react_default.a.createElement("th", null, "Action"))), react_default.a.createElement("tbody", null, this.state.books.map(function (book, index) {\n        return react_default.a.createElement("tr", {\n          key: "tableRow" + index\n        }, react_default.a.createElement("td", null, index + 1), react_default.a.createElement("td", null, book.bookName), react_default.a.createElement("td", null, book.bookAuthor), react_default.a.createElement("td", null, book.bookIsbn), react_default.a.createElement("td", null, " ", react_default.a.createElement("button", {\n          type: "button",\n          className: "btn btn-small btn-default",\n          onClick: _this2.onUpdateClickHandler.bind(_this2, "update", book.bookId)\n        }, "Update")));\n      }))))), react_default.a.createElement("div", {\n        className: "panel-footer"\n      }, react_default.a.createElement("div", {\n        className: "display-inline"\n      }, react_default.a.createElement("button", {\n        type: "button",\n        className: "btn btn-default",\n        onClick: this.openModalHandler.bind(this, "actionAdd")\n      }, "Add"))), react_default.a.createElement(components_Modal_Modal, {\n        title: this.state.modal.action === "actionAdd" ? "Add Book" : "Update Book",\n        show: this.state.modal.show,\n        handleClose: this.closeModalHandler,\n        handleOk: this.onOkButtonClickHandler.bind(this, this.state.modal.action),\n        labelOk: this.state.modal.action === "actionAdd" ? "Add" : "Update",\n        labelClose: "Exit"\n      }, react_default.a.createElement("div", {\n        className: "row"\n      }, react_default.a.createElement("div", {\n        className: "col-lg-4"\n      }, "Book Name:"), react_default.a.createElement("div", {\n        className: "col-lg-4"\n      }, react_default.a.createElement("input", {\n        type: "text",\n        className: "form-control",\n        id: "bookName",\n        value: this.state.book.bookName,\n        onChange: this.changeHandler\n      }))), react_default.a.createElement("div", {\n        className: "row"\n      }, react_default.a.createElement("div", {\n        className: "col-lg-4"\n      }, "Author:"), react_default.a.createElement("div", {\n        className: "col-lg-4"\n      }, react_default.a.createElement("input", {\n        type: "text",\n        className: "form-control",\n        id: "bookAuthor",\n        value: this.state.book.bookAuthor,\n        onChange: this.changeHandler\n      }))), react_default.a.createElement("div", {\n        className: "row"\n      }, react_default.a.createElement("div", {\n        className: "col-lg-4"\n      }, "ISBN:"), react_default.a.createElement("div", {\n        className: "col-lg-4"\n      }, react_default.a.createElement("input", {\n        type: "text",\n        className: "form-control",\n        id: "bookIsbn",\n        value: this.state.book.bookIsbn,\n        onChange: this.changeHandler\n      }))))));\n    }\n  }]);\n\n  return Book;\n}(react["Component"]);\n\n/* harmony default export */ var components_Book_Book = (Object(react_router["f" /* withRouter */])(Book_Book));\n// CONCATENATED MODULE: ./src/components/Error/Error.js\n\n\n\nvar Error_Error = function Error(props) {\n  return react_default.a.createElement("div", {\n    className: "row"\n  }, react_default.a.createElement("div", {\n    className: "large-body col-sm-12 pl-4 mt-4"\n  }, react_default.a.createElement("p", null, "An error occurred while attempting to process your request."), react_default.a.createElement("p", null, "Additional information follows : "), react_default.a.createElement("p", null, "An unknown system error has occurred.")));\n};\n\n/* harmony default export */ var components_Error_Error = (Object(react_router["f" /* withRouter */])(Error_Error));\n// CONCATENATED MODULE: ./src/App.js\nfunction App_typeof(obj) { if (typeof Symbol === "function" && typeof Symbol.iterator === "symbol") { App_typeof = function _typeof(obj) { return typeof obj; }; } else { App_typeof = function _typeof(obj) { return obj && typeof Symbol === "function" && obj.constructor === Symbol && obj !== Symbol.prototype ? "symbol" : typeof obj; }; } return App_typeof(obj); }\n\nfunction App_classCallCheck(instance, Constructor) { if (!(instance instanceof Constructor)) { throw new TypeError("Cannot call a class as a function"); } }\n\nfunction App_defineProperties(target, props) { for (var i = 0; i < props.length; i++) { var descriptor = props[i]; descriptor.enumerable = descriptor.enumerable || false; descriptor.configurable = true; if ("value" in descriptor) descriptor.writable = true; Object.defineProperty(target, descriptor.key, descriptor); } }\n\nfunction App_createClass(Constructor, protoProps, staticProps) { if (protoProps) App_defineProperties(Constructor.prototype, protoProps); if (staticProps) App_defineProperties(Constructor, staticProps); return Constructor; }\n\nfunction App_possibleConstructorReturn(self, call) { if (call && (App_typeof(call) === "object" || typeof call === "function")) { return call; } return App_assertThisInitialized(self); }\n\nfunction App_assertThisInitialized(self) { if (self === void 0) { throw new ReferenceError("this hasn\'t been initialised - super() hasn\'t been called"); } return self; }\n\nfunction App_getPrototypeOf(o) { App_getPrototypeOf = Object.setPrototypeOf ? Object.getPrototypeOf : function _getPrototypeOf(o) { return o.__proto__ || Object.getPrototypeOf(o); }; return App_getPrototypeOf(o); }\n\nfunction App_inherits(subClass, superClass) { if (typeof superClass !== "function" && superClass !== null) { throw new TypeError("Super expression must either be null or a function"); } subClass.prototype = Object.create(superClass && superClass.prototype, { constructor: { value: subClass, writable: true, configurable: true } }); if (superClass) App_setPrototypeOf(subClass, superClass); }\n\nfunction App_setPrototypeOf(o, p) { App_setPrototypeOf = Object.setPrototypeOf || function _setPrototypeOf(o, p) { o.__proto__ = p; return o; }; return App_setPrototypeOf(o, p); }\n\n\n\n\n\n\n\n\nvar App_App =\n/*#__PURE__*/\nfunction (_Component) {\n  App_inherits(App, _Component);\n\n  function App(props) {\n    App_classCallCheck(this, App);\n\n    return App_possibleConstructorReturn(this, App_getPrototypeOf(App).call(this, props));\n  }\n\n  App_createClass(App, [{\n    key: "render",\n    value: function render() {\n      return react_default.a.createElement(components_Layout_Layout, null, react_default.a.createElement(react_router["c" /* Switch */], null, react_default.a.createElement(react_router["a" /* Route */], {\n        path: "/error",\n        render: function render() {\n          return react_default.a.createElement(components_Error_Error, null);\n        }\n      }), react_default.a.createElement(react_router["a" /* Route */], {\n        path: "/addBooks",\n        render: function render() {\n          return react_default.a.createElement(components_Book_Book, null);\n        }\n      }), react_default.a.createElement(react_router["a" /* Route */], {\n        path: "/",\n        render: function render() {\n          return react_default.a.createElement(Liibrary_Library, null);\n        }\n      }), react_default.a.createElement(react_router["a" /* Route */], {\n        render: function render() {\n          return react_default.a.createElement("h1", null, "Not Found");\n        }\n      })));\n    }\n  }]);\n\n  return App;\n}(react["Component"]);\n\n/* harmony default export */ var src_App = (Object(react_router["f" /* withRouter */])(App_App));\n// EXTERNAL MODULE: ./node_modules/bootstrap/dist/css/bootstrap.min.css\nvar bootstrap_min = __webpack_require__(396);\n\n// EXTERNAL MODULE: ./src/css/custom.css\nvar custom = __webpack_require__(397);\n\n// CONCATENATED MODULE: ./src/index.js\n\n\n\n\n\n\n\n\n\n\nvar app = react_default.a.createElement(react_router_dom["a" /* HashRouter */], null, react_default.a.createElement(src_App, null));\nreact_dom_default.a.render(app, document.getElementById("app"));//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,\n//# sourceURL=webpack-internal:///398\n')}});
//# sourceMappingURL=data:application/json;charset=utf-8;base64,